{"version":3,"sources":["img/gooey-ball-tail-spinner.gif","components/PostItem.js","components/AddPost.js","components/PostList.js","components/SearchPosts.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","PostItem","_ref","post","deletePost","setLoader","react_default","a","createElement","className","title","toUpperCase","slice","onClick","e","setTimeout","id","body","AddPost","state","handleChange","_this","setState","Object","objectSpread","defineProperty","target","value","handleSubmit","labels","toConsumableArray","document","querySelectorAll","inputs","props","preventDefault","addPost","map","label","classList","input","remove","onSubmit","this","type","pattern","onChange","required","htmlFor","name","Component","PostList","posts","filteredText","loadingPosts","filtered","toLowerCase","postList","length","indexOf","key","AddPost_AddPost","data-collapsible","SearchPosts","searchingPosts","placeholder","searchedTerm","match","onKeyDown","App","_useState","useState","_useState2","slicedToArray","loadingSpinner","setLoadingSpinner","_useState3","_useState4","setLoadingPosts","_useState5","_useState6","setPosts","_useState7","_useState8","setFilteredText","useEffect","axios","get","then","res","data","boolean","src","Spinner","alt","components_SearchPosts","term","components_PostList","newPosts","filter","lastPost","_posts","concat","Boolean","window","location","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f0c7e63c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gooey-ball-tail-spinner.3e08fc76.gif\";","import React from 'react'\r\n\r\nexport default function PostItem({post, deletePost, setLoader}) {\r\n\r\n    const handleLoader = (e) => {                 \r\n        setLoader(true);\r\n        setTimeout(() => {                                    \r\n            setLoader(false);                                 \r\n        }, 700)\r\n        deletePost(post.id);\r\n    }\r\n\r\n\r\n    return (\r\n        <li >\r\n            <div className=\"collapsible-header valign-wrapper\">\r\n            <h5>{post.title[0].toUpperCase() + post.title.slice(1)}</h5>             \r\n                <div className=\"post-body-icons right valign-wrapper\">                       \r\n                    <i onClick={ handleLoader} className=\"material-icons delete\">delete</i>                                             \r\n                    <i className=\"material-icons right\">more_vert</i>\r\n                </div>\r\n            </div>\r\n            <div className=\"collapsible-body grey lighten-4\">                \r\n                <span className=\"post-body\">{post.body[0].toUpperCase() + post.body.slice(1)}</span>                                                        \r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class AddPost extends Component {\r\n  state = {\r\n    post: {\r\n      id: null,\r\n      title: \"\",\r\n      body: \"\",\r\n    },\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { post } = this.state;\r\n    this.setState({\r\n      post: {\r\n        ...post,\r\n        [e.target.id]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    // Delete a class active from a label, since it stays in focus\r\n    var labels = [...document.querySelectorAll(\"label.active\")];\r\n    // Delete a class valid from a input field, since it stays in focus\r\n    var inputs = [...document.querySelectorAll(\"input.validate \")];\r\n    const { setLoader } = this.props;\r\n\r\n    setLoader(true);\r\n    setTimeout(() => {\r\n      setLoader(false);\r\n    }, 1000);\r\n\r\n    e.preventDefault();\r\n    this.props.addPost(this.state.post);\r\n    this.setState({\r\n      post: {\r\n        id: null,\r\n        title: \"\",\r\n        body: \"\",\r\n      },\r\n    });\r\n\r\n    labels.map((label) => {\r\n      label.classList.value = \"\";\r\n      return null;\r\n    });\r\n    inputs.map((input) => {\r\n      input.classList.remove(\"valid\");\r\n      return null;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s12 m10 offset-m1\">\r\n              <input\r\n                id=\"title\"\r\n                type=\"text\"\r\n                className=\"validate\"\r\n                pattern=\"([A-Za-z]*\\s*\\d*)*\"\r\n                title=\"Only letters, digits and whitespaces\"\r\n                onChange={this.handleChange}\r\n                value={this.state.post.title}\r\n                required\r\n              />\r\n              <label htmlFor=\"title\">Add Post Title</label>\r\n            </div>\r\n            <div className=\"input-field col s12 m10 offset-m1\">\r\n              <input\r\n                id=\"body\"\r\n                type=\"text\"\r\n                className=\"validate\"\r\n                pattern=\"([A-Za-z]*\\s*\\d*)*\"\r\n                title=\"Only letters, digits and whitespaces\"\r\n                onChange={this.handleChange}\r\n                value={this.state.post.body}\r\n                required\r\n              />\r\n              <label htmlFor=\"body\">Add Post Body</label>\r\n              <div className=\"row\">\r\n                <div className=\"input-field col s12\">\r\n                  <button\r\n                    className=\"btn cyan waves-effect waves-light right add_post_btn\"\r\n                    type=\"submit\"\r\n                    name=\"action\"\r\n                  >\r\n                    Add Post\r\n                    <i className=\"material-icons right\">send</i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PostItem from \"./PostItem\";\r\nimport AddPost from \"./AddPost\";\r\n\r\nfunction PostList({posts, filteredText, deletePost, addPost, loadingPosts, setLoader}) {\r\n\r\n    const filtered = filteredText.toLowerCase();\r\n\r\n    const postList = posts.length ? (\r\n        posts.map(post => {\r\n            if(post.title.toLowerCase().indexOf(filtered) === -1) {\r\n                return null;\r\n            } else {\r\n                return(\r\n                     <PostItem post={post} deletePost={deletePost} key={post.id} setLoader={setLoader}/>\r\n                )\r\n            }\r\n        })\r\n    ) : (\r\n        <li key=\"xxx\">\r\n            <div className=\"collapsible-header\">\r\n                <h5 className=\"center\">There are no posts left...</h5>\r\n            </div>                \r\n        </li>\r\n    );\r\n   \r\n    return (\r\n        <div>\r\n          <div className=\"card card-tabs nav_box nav_box_bottom\">\r\n            <div className=\"card-content\">                                                                         \r\n              <div>               \r\n                <AddPost addPost={addPost} setLoader={setLoader}/>\r\n              </div>         \r\n            </div>\r\n          </div>            \r\n          <ul className=\"collapsible\" id=\"post-list\" data-collapsible=\"accordion\">\r\n              {loadingPosts && postList}            \r\n          </ul>       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostList\r\n","import React from 'react'\r\n\r\nfunction SearchPosts({searchingPosts, setLoader}) {\r\n\r\n    const searchHandler = (e) => {\r\n        var searchedTerm = e.target.value;\r\n        var regex = /[^\\w\\s]/gmi;\r\n        if( searchedTerm.match(regex)) {\r\n            setLoader(false);\r\n            return null;            \r\n        } else {            \r\n            searchingPosts(searchedTerm);                       \r\n        }                \r\n    }\r\n\r\n    const handlerKeyDown = () => {\r\n        setLoader(true); \r\n        setTimeout(() => {\r\n            setLoader(false); \r\n        }, 1000)\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"input-field col s12 m10 offset-m1 l8 red-text valign-wrapper\">                \r\n            <i className=\"cyan-text material-icons prefix small\">search</i>\r\n            <input type=\"text\" placeholder=\"search\" pattern=\"[A-Za-z]+\\s*\\d*\" title=\"Only letters, digits and whitespaces\" required id=\"autocomplete-input\" className=\"cyan-text\" onChange={searchHandler} onKeyDown={handlerKeyDown} />                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchPosts\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\nimport PostList from \"./components/PostList\";\r\nimport SearchPosts from \"./components/SearchPosts\";\r\nimport Spinner from \"./img/gooey-ball-tail-spinner.gif\";\r\n\r\nfunction App() {\r\n  const [loadingSpinner, setLoadingSpinner] = useState(false);\r\n  const [loadingPosts, setLoadingPosts] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n  const [filteredText, setFilteredText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://jsonplaceholder.typicode.com/posts\").then((res) => {\r\n      setPosts(res.data);\r\n      setLoadingSpinner(true);\r\n    });\r\n    setTimeout(() => {\r\n      setLoadingSpinner(false);\r\n      setLoadingPosts(true);\r\n    }, 2000);\r\n  }, []);\r\n\r\n  const deletePost = (id) => {\r\n    const newPosts = posts.filter((post) => {\r\n      return post.id !== id;\r\n    });\r\n    setPosts(newPosts);\r\n  };\r\n\r\n  const addPost = (post) => {\r\n    // Set the post_ID as lastPost_ID + 1\r\n    let lastPost = posts[posts.length - 1];\r\n    lastPost ? (post.id = lastPost.id + 1) : (post.id = 1);\r\n    let _posts = [...posts, post];\r\n    setPosts(_posts);\r\n  };\r\n\r\n  const handleSearchInput = (term) => {\r\n    setFilteredText(term);\r\n  };\r\n\r\n  const setLoader = (boolean) => {\r\n    setLoadingSpinner(boolean);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container main\">\r\n      {loadingSpinner && (\r\n        <img className=\"preloader\" src={Spinner} alt=\"preloader\" />\r\n      )}\r\n      <div className=\"card card-tabs nav_box nav_box_top\">\r\n        <div className=\"card-content\">\r\n          <div className=\"row \">\r\n            <div className=\"card-title col s12 m12 l4 cyan-text darken-4\">\r\n              Post list\r\n            </div>\r\n            <SearchPosts\r\n              searchingPosts={handleSearchInput}\r\n              setLoader={setLoader}\r\n            />\r\n          </div>\r\n          <div className=\"divider\"></div>\r\n        </div>\r\n      </div>\r\n      <PostList\r\n        posts={posts}\r\n        loadingPosts={loadingPosts}\r\n        setLoader={setLoader}\r\n        filteredText={filteredText}\r\n        deletePost={deletePost}\r\n        addPost={addPost}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n// export class App extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       posts: [],\r\n//       filteredText: \"\",\r\n//       loadingSpinner: false,\r\n//       loadingPosts: false,\r\n//     };\r\n//   }\r\n\r\n// componentDidMount() {\r\n//   axios.get(\"http://jsonplaceholder.typicode.com/posts\").then((res) => {\r\n//     this.setState({\r\n//       posts: res.data,\r\n//       loadingSpinner: true,\r\n//     });\r\n//   });\r\n//   setTimeout(() => {\r\n//     this.setState({\r\n//       loadingSpinner: false,\r\n//       loadingPosts: true,\r\n//     });\r\n//   }, 2000);\r\n// }\r\n\r\n// deletePost = (id) => {\r\n//   const newPosts = this.state.posts.filter((post) => {\r\n//     return post.id !== id;\r\n//   });\r\n//   this.setState({\r\n//     posts: newPosts,\r\n//   });\r\n// };\r\n\r\n// addPost = (post) => {\r\n//   // Set the post_ID as lastPost_ID + 1\r\n//   let lastPost = this.state.posts[this.state.posts.length - 1];\r\n//   lastPost ? (post.id = lastPost.id + 1) : (post.id = 1);\r\n//   let posts = [...this.state.posts, post];\r\n//   this.setState({\r\n//     posts: posts,\r\n//   });\r\n// };\r\n\r\n// handleSearchInput = (term) => {\r\n//   this.setState({\r\n//     filteredText: term,\r\n//   });\r\n// };\r\n\r\n// setLoader = (boolean) => {\r\n//   this.setState({\r\n//     loadingSpinner: boolean,\r\n//   });\r\n// };\r\n\r\n//   render() {\r\n//     const { loadingSpinner } = this.state;\r\n//     return (\r\n//       <div className=\"container main\">\r\n//         {loadingSpinner && (\r\n//           <img className=\"preloader\" src={Spinner} alt=\"preloader\" />\r\n//         )}\r\n//         <div className=\"card card-tabs nav_box nav_box_top\">\r\n//           <div className=\"card-content\">\r\n//             <div className=\"row \">\r\n//               <div className=\"card-title col s12 m12 l4 cyan-text darken-4\">\r\n//                 Post list\r\n//               </div>\r\n//               <SearchPosts\r\n//                 searchingPosts={this.handleSearchInput}\r\n//                 setLoader={this.setLoader}\r\n//               />\r\n//             </div>\r\n//             <div className=\"divider\"></div>\r\n//           </div>\r\n//         </div>\r\n//         <PostList\r\n//           posts={this.state.posts}\r\n//           loadingPosts={this.state.loadingPosts}\r\n//           setLoader={this.setLoader}\r\n//           filteredText={this.state.filteredText}\r\n//           deletePost={this.deletePost}\r\n//           addPost={this.addPost}\r\n//         />\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import 'materialize-css'; // It installs the JS asset only\r\n// import 'materialize-css/dist/css/materialize.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}