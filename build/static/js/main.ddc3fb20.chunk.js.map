{"version":3,"sources":["img/gooey-ball-tail-spinner.gif","components/PostItem.js","components/AddPost.js","components/PostList.js","components/SearchPosts.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","PostItem","_ref","post","deletePost","setLoader","react_default","a","createElement","className","title","toUpperCase","slice","onClick","e","setTimeout","id","body","AddPost","state","handleChange","_this","setState","Object","objectSpread","defineProperty","target","value","handleSubmit","labels","toConsumableArray","document","querySelectorAll","inputs","props","preventDefault","addPost","map","label","classList","input","remove","onSubmit","this","type","pattern","onChange","required","htmlFor","name","Component","PostList","posts","filteredText","loadingPosts","filtered","toLowerCase","postList","length","indexOf","key","AddPost_AddPost","data-collapsible","SearchPosts","searchingPosts","placeholder","searchedTerm","match","onKeyDown","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","newPosts","filter","lastPost","concat","handleSearchInput","term","boolean","loadingSpinner","_this2","axios","get","then","res","data","src","Spinner","alt","components_SearchPosts","components_PostList","Boolean","window","location","hostname","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ddc3fb20.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gooey-ball-tail-spinner.3e08fc76.gif\";","import React from 'react'\r\n\r\nexport default function PostItem({post, deletePost, setLoader}) {\r\n\r\n    const handleLoader = (e) => {                 \r\n        setLoader(true);\r\n        setTimeout(() => {                                    \r\n            setLoader(false);                                 \r\n        }, 700)\r\n        deletePost(post.id);\r\n    }\r\n\r\n\r\n    return (\r\n        <li >\r\n            <div className=\"collapsible-header valign-wrapper\">\r\n            <h5>{post.title[0].toUpperCase() + post.title.slice(1)}</h5>             \r\n                <div className=\"post-body-icons right valign-wrapper\">                       \r\n                    <i onClick={ handleLoader} className=\"material-icons delete\">delete</i>                                             \r\n                    <i className=\"material-icons right\">more_vert</i>\r\n                </div>\r\n            </div>\r\n            <div className=\"collapsible-body grey lighten-4\">                \r\n                <span className=\"post-body\">{post.body[0].toUpperCase() + post.body.slice(1)}</span>                                                        \r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class AddPost extends Component {\r\n    state = {\r\n        post: {\r\n            id: null,\r\n            title: \"\",\r\n            body: \"\"\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const {post} = this.state;                \r\n        this.setState({\r\n            post: {\r\n                ...post,\r\n                [e.target.id]: e.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n         // Delete a class active from a label, since it stays in focus\r\n         var labels = [...document.querySelectorAll(\"label.active\")];\r\n         // Delete a class valid from a input field, since it stays in focus\r\n         var inputs = [...document.querySelectorAll(\"input.validate \")];\r\n         const {setLoader} = this.props;\r\n\r\n         setLoader(true);\r\n        setTimeout(() => {\r\n            setLoader(false)\r\n        }, 1000)\r\n\r\n        e.preventDefault();              \r\n        this.props.addPost(this.state.post);        \r\n        this.setState({\r\n            post: {\r\n                id: null,\r\n                title: \"\",\r\n                body: \"\"\r\n            }\r\n        })               \r\n        \r\n        labels.map(label => {\r\n            label.classList.value = \"\";\r\n            return null;\r\n        })  \r\n        inputs.map(input => {\r\n            input.classList.remove(\"valid\");\r\n            return null;\r\n        })        \r\n    }\r\n    \r\n    render() {        \r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"row\">              \r\n                        <div className=\"input-field col s12 m10 offset-m1\">\r\n                            <input id=\"title\" type=\"text\" className=\"validate\" pattern=\"([A-Za-z]*\\s*\\d*)*\" title=\"Only letters, digits and whitespaces\" onChange={this.handleChange} value={this.state.post.title} required/>\r\n                            <label htmlFor=\"title\">Add Post Title</label>\r\n                        </div>\r\n                        <div className=\"input-field col s12 m10 offset-m1\">                            \r\n                            <input id=\"body\" type=\"text\" className=\"validate\" pattern=\"([A-Za-z]*\\s*\\d*)*\" title=\"Only letters, digits and whitespaces\" onChange={this.handleChange} value={this.state.post.body} required/>\r\n                            <label htmlFor=\"body\">Add Post Body</label>\r\n                            <div className=\"row\">\r\n                                <div className=\"input-field col s12\">\r\n                                    <button className=\"btn cyan waves-effect waves-light right\" type=\"submit\" name=\"action\">Add Post\r\n                                        <i className=\"material-icons right\">send</i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>                                                        \r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PostItem from \"./PostItem\";\r\nimport AddPost from \"./AddPost\";\r\n\r\nfunction PostList({posts, filteredText, deletePost, addPost, loadingPosts, setLoader}) {\r\n\r\n    const filtered = filteredText.toLowerCase();\r\n\r\n    const postList = posts.length ? (\r\n        posts.map(post => {\r\n            if(post.title.toLowerCase().indexOf(filtered) === -1) {\r\n                return null;\r\n            } else {\r\n                return(\r\n                     <PostItem post={post} deletePost={deletePost} key={post.id} setLoader={setLoader}/>\r\n                )\r\n            }\r\n        })\r\n    ) : (\r\n        <li key=\"xxx\">\r\n            <div className=\"collapsible-header\">\r\n                <h5 className=\"center\">There are no posts left...</h5>\r\n            </div>                \r\n        </li>\r\n    );\r\n   \r\n    return (\r\n        <div>\r\n          <div className=\"card card-tabs nav_box nav_box_bottom\">\r\n            <div className=\"card-content\">                                                                         \r\n              <div>               \r\n                <AddPost addPost={addPost} setLoader={setLoader}/>\r\n              </div>         \r\n            </div>\r\n          </div>            \r\n          <ul className=\"collapsible\" id=\"post-list\" data-collapsible=\"accordion\">\r\n              {loadingPosts && postList}            \r\n          </ul>       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostList\r\n","import React from 'react'\r\n\r\nfunction SearchPosts({searchingPosts, setLoader}) {\r\n\r\n    const searchHandler = (e) => {\r\n        var searchedTerm = e.target.value;\r\n        var regex = /[^\\w\\s]/gmi;\r\n        if( searchedTerm.match(regex)) {\r\n            setLoader(false);\r\n            return null;            \r\n        } else {            \r\n            searchingPosts(searchedTerm);                       \r\n        }                \r\n    }\r\n\r\n    const handlerKeyDown = () => {\r\n        setLoader(true); \r\n        setTimeout(() => {\r\n            setLoader(false); \r\n        }, 1000)\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"input-field col s12 m10 offset-m1 l8 red-text valign-wrapper\">                \r\n            <i className=\"cyan-text material-icons prefix small\">search</i>\r\n            <input type=\"text\" placeholder=\"search\" pattern=\"[A-Za-z]+\\s*\\d*\" title=\"Only letters, digits and whitespaces\" required id=\"autocomplete-input\" className=\"cyan-text\" onChange={searchHandler} onKeyDown={handlerKeyDown} />                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchPosts\r\n","import React, { Component } from 'react';\nimport \"./App.css\";\nimport PostList from \"./components/PostList\";\nimport SearchPosts from \"./components/SearchPosts\";\nimport axios from \"axios\";\nimport Spinner from \"./img/gooey-ball-tail-spinner.gif\";\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {      \n      posts: [],\n      filteredText: \"\",\n      loadingSpinner: false,\n      loadingPosts: false\n    }\n  }\n  \n  componentDidMount() {\n    axios.get(\"http://jsonplaceholder.typicode.com/posts\")\n    .then(res => {    \n      this.setState({        \n        posts: res.data,\n        loadingSpinner: true\n      })\n    })\n    setTimeout(() => {\n      this.setState({\n        loadingSpinner: false,\n        loadingPosts: true\n      })\n    }, 2000)\n  }\n\n  deletePost = (id) => {    \n    const newPosts = this.state.posts.filter(post => {\n      return post.id !== id\n    })\n    this.setState({\n      posts: newPosts\n    })\n  }\n\n  addPost = (post) => {\n    // Set the post_ID as lastPost_ID + 1\n    let lastPost = this.state.posts[this.state.posts.length - 1];\n    lastPost ? post.id = lastPost.id + 1 : post.id = 1;    \n    let posts = [...this.state.posts, post];\n    this.setState({\n      posts: posts\n    })    \n  }\n\n  handleSearchInput = (term) => {\n    this.setState({\n      filteredText: term\n    })    \n  }\n\n  setLoader = (boolean) => {\n    this.setState({\n      loadingSpinner: boolean\n    })\n  }\n\n  render() {  \n    const {loadingSpinner} = this.state;      \n    return (\n      <div className=\"container main\" >\n      {loadingSpinner && <img className=\"preloader\" src={Spinner} alt=\"preloader\"/>} \n        <div className=\"card card-tabs nav_box nav_box_top\">\n          <div className=\"card-content\">\n            <div className=\"row \">\n              <div className=\"card-title col s12 m12 l4 cyan-text darken-4\">Post list</div>\n              <SearchPosts searchingPosts={this.handleSearchInput} setLoader={this.setLoader}/>\n            </div>                                    \n            <div className=\"divider\"></div>          \n          </div>\n        </div>          \n        <PostList posts={this.state.posts} loadingPosts={this.state.loadingPosts} setLoader={this.setLoader} filteredText={this.state.filteredText} deletePost={this.deletePost} addPost={this.addPost}/>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import 'materialize-css'; // It installs the JS asset only\n// import 'materialize-css/dist/css/materialize.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}